name: build-and-deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Show workspace
        run: |
          set -e
          echo "Branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "::group::ls-root"; ls -la; echo "::endgroup::"
          echo "::group::ls-game"; find game-api -maxdepth 3 -type f -print 2>/dev/null || true; echo "::endgroup::"
          echo "::group::ls-deploy"; find deploy -maxdepth 2 -type f -print 2>/dev/null || true; echo "::endgroup::"
      - name: Verify required files exist
        run: |
          set -e
          test -f game-api/Dockerfile                || { echo "Missing game-api/Dockerfile"; exit 1; }
          test -f game-api/src/index.ts              || { echo "Missing game-api/src/index.ts"; exit 1; }
          test -f game-api/public/test.html          || { echo "Missing game-api/public/test.html"; exit 1; }
          test -f deploy/docker-compose.yml          || { echo "Missing deploy/docker-compose.yml"; exit 1; }
          test -f deploy/Caddyfile                   || { echo "Missing deploy/Caddyfile"; exit 1; }
          echo "Preflight passed."

  build:
    needs: preflight
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Short SHA
        id: vars
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Validate GHCR_PAT is present
        run: |
          test -n "${{ secrets.GHCR_PAT }}" || { echo "GHCR_PAT secret is missing or empty"; exit 1; }

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: intunewithnature
          password: ${{ secrets.GHCR_PAT }}

      # Build & push lore-site (classic CLI)
      - name: Build & push lore-site (latest + SHA)
        run: |
          set -e
          TAG=ghcr.io/${{ github.repository_owner }}/lore-site
          SHA=${{ github.sha }}
          docker build -t $TAG:latest -t $TAG:$SHA ./lore-site
          docker push $TAG:latest
          docker push $TAG:$SHA

      # Build & push werewolf-game from root using explicit Dockerfile path
      - name: Build & push werewolf-game (latest + SHA)
        run: |
          set -e
          TAG=ghcr.io/${{ github.repository_owner }}/werewolf-game
          SHA=${{ github.sha }}
          echo "==> Building werewolf-game from repo root"
          docker build --file game-api/Dockerfile -t $TAG:latest -t $TAG:$SHA .
          docker push $TAG:latest
          docker push $TAG:$SHA

      # Build & push impious-lore via build-push-action
      - name: Build & push impious-lore (latest + short SHA)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./lore/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/impious-lore:${{ steps.vars.outputs.sha_short }}
            ghcr.io/${{ github.repository_owner }}/impious-lore:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Ensure remote dir
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} 'mkdir -p /opt/impious/deploy'

      - name: Copy deploy files
        run: scp -o StrictHostKeyChecking=no -r deploy/* ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/impious/deploy/

      - name: Login GHCR on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
            echo '${{ secrets.GHCR_PAT }}' | docker login ghcr.io -u intunewithnature --password-stdin
          "

      - name: Compose up on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
            set -e
            cd /opt/impious/deploy
            (docker compose pull caddy lore game || docker-compose pull caddy lore game) || true
            (docker compose up -d --remove-orphans || docker-compose up -d --remove-orphans)
            (docker compose ps || docker-compose ps)
          "
